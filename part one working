#include <Adafruit_NeoPixel.h>
#define PIN 2
#define NUM_LEDS 40
Adafruit_NeoPixel strip = Adafruit_NeoPixel(NUM_LEDS, PIN, NEO_GRB + NEO_KHZ800);
int led = NUM_LEDS;



void setup() {
  Serial.begin(9600);
  strip.begin();
  strip.show(); // Initialize all pixels to 'off'
}

void loop() {
  // get the current time
  unsigned long currentMillis = millis();

  {
    Serial.print ("cyc-start");
    cyclotron_idle();
  }
}


// need to take control over this animation with brightness, delay to full brightness and speed control with some sort of rampup effect?, speed needs to be faster too //

const unsigned long cyc_interval = 0;      // interval at which to cycle lights (milliseconds).
unsigned long prevCycMillis = 0;        // last time we changed a cyclotron light in the idle sequence

void cyclotron_idle () {
  unsigned long cycloMillis = millis();
 
  strip.clear();
  if (millis() - prevCycMillis >=  cyc_interval) {
    strip.setPixelColor(led, strip.Color(200, 0, 0));
    strip.setPixelColor(led -1, strip.Color(200, 0, 0));
    strip.show();
    led--;
    if (led <= 0 )led = NUM_LEDS;
    prevCycMillis = millis();
  }
}

void showStrip() {
#ifdef ADAFRUIT_NEOPIXEL_H
  // NeoPixel
  strip.show();
#endif

}
// int cyclon_interval

void setPixel(int Pixel, byte red, byte green, byte blue) {
#ifdef ADAFRUIT_NEOPIXEL_H
  // NeoPixel
  strip.setPixelColor(Pixel, strip.Color(red, green, blue));
#endif
}

void setAll(byte red, byte green, byte blue) {
  for (int i = 0; i < NUM_LEDS; i++ ) {
    setPixel(i, red, green, blue);
  }
  showStrip();
}
